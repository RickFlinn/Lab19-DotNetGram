// <auto-generated />
using DotNetGram.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetGram.Migrations
{
    [DbContext(typeof(NetGramDbContext))]
    partial class NetGramDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetGram.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Content");

                    b.Property<int>("PostID");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "Sally",
                            Content = "Wow. So proud of your conviction and style, sis! You are the coolest!",
                            PostID = 4
                        },
                        new
                        {
                            ID = 2,
                            Author = "Bob the Doggo Owner",
                            Content = "Nice! Going to have to try and recreate this for Max. Substituting in kibble, of course!",
                            PostID = 5
                        },
                        new
                        {
                            ID = 3,
                            Author = "Sally's Cool Older Sister",
                            Content = "I just made a gluten-free version of this dish for my friend Amanda, who is also Totally Cool.",
                            PostID = 5
                        });
                });

            modelBuilder.Entity("DotNetGram.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "Sally",
                            Description = "Flavored Latte with a pretty little swirleydoo",
                            ImageUrl = "https://via.placeholder.com/150",
                            Title = "Best Ever Coffee Pic"
                        },
                        new
                        {
                            ID = 2,
                            Author = "Bob The Doggo Owner",
                            Description = "We were worried hey might eat them but Max has happily adopted this horde of super-fluffy baby chicks and also kittens!!!!",
                            ImageUrl = "https://via.placeholder.com/150",
                            Title = "MY DOG IS THE CUTEST"
                        },
                        new
                        {
                            ID = 3,
                            Author = "Maybe I'M Banksy and forgot?!?",
                            Description = "Work of art! So subversive! Banksy Original?!?",
                            ImageUrl = "https://via.placeholder.com/150",
                            Title = "Sweet Graffiti Someone Painted On My Car"
                        },
                        new
                        {
                            ID = 4,
                            Author = "Sally's Cool Older Sister",
                            Description = "No really, I put a lot of thought into this. I am very cautious about getting tattoos and I am following my genuine passion for body modifications.",
                            ImageUrl = "https://via.placeholder.com/150",
                            Title = "Tattoo That I Do Not In Any Way, Shape or Form Regret"
                        },
                        new
                        {
                            ID = 5,
                            Author = "Guy who actually really cares about food and/or my dad",
                            Description = "**Insert Cliche Satire of Instagram Food Pics",
                            ImageUrl = "https://via.placeholder.com/150",
                            Title = "Picture of Food You're Not Eating!"
                        });
                });

            modelBuilder.Entity("DotNetGram.Models.Comment", b =>
                {
                    b.HasOne("DotNetGram.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
